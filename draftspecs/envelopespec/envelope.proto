syntax = "proto3";
package dogma.envelope.v1;

option go_package = "github.com/dogmatiq/infix/draftspecs/envelopespec";

// Identity is a protocol buffers representation of the configkit.Identity type.
message Identity {
  // Name is the entity's unique name.
  string name = 1;

  // Key is the entity's immutable, unique key.
  string key = 2;
}

message Source {
  // Application is the identity of the Dogma application that produced this
  // message.
  Identity application = 1;

  // Handler is the identity of the handler that produced the message. It is the
  // zero-value if the message was not produced by a handler.
  Identity handler = 2;

  // InstanceID is the aggregate or process instance that produced the message.
  // It is empty if the message was not produced by a handler, or it was
  // produced by an integration handler.
  string instance_id = 3;
}

// MetaData is a protocol buffers representation of the envelope.MetaData type.
message MetaData  {
  // MessageID is a unique identifier for the message.
  string message_id = 1;

  // CausationID is the ID of the message that was being handled when the
  // message identified by MessageID was produced.
  string causation_id = 2;

  // CorrelationID is the ID of the "root" message that entered the application
  // to cause the message identified by MessageID, either directly or
  // indirectly.
  string correlation_id = 3;

  // Source describes the source of the message.
  Source source = 4;

  // CreatedAt is the time at which the message was created, marshaled in
  // binary format.
  bytes created_at = 5;

  // ScheduledFor is the time at which a timeout message was scheduled,
  // marshaled in binary format.
  bytes scheduled_for = 6;
}

// Envelope is a protocol buffers representation of the envelope.Envelope type.
message Envelope {
  // MetaData is the message meta-data.
  MetaData meta_data = 1;

  // PortableName is the unique name used to identify messages of this type.
  string portable_name = 2;

  // MediaType is a MIME media-type describing the content and encoding of the
  // binary message data.
  string media_type = 3;

  // Data is the binary message data.
  bytes data = 4;
}
