syntax = "proto3";
package dogma.messaging.v1;

option go_package = "github.com/dogmatiq/infix/api/internal/pb";

// Identity is a protocol buffers representation of the configkit.Identity type.
message Identity {
  // Name is the entity's unique name.
  string name = 1;

  // Key is the entity's immutable, unique key.
  string key = 2;
}

// Envelope is a protocol buffers representation of the envelope.Envelope type.
message Envelope {
  // MessageID is a unique identifier for the message.
  string message_id = 1;

  // CausationID is the ID of the message that was being handled when the
  // message identified by MessageID was produced.
  string causation_id = 2;

  // CorrelationID is the ID of the "root" message that entered the application
  // to cause the message identified by MessageID, either directly or
  // indirectly.
  string correlation_id = 3;

  // SourceApplication is the identity of the Dogma application that produced
  // this message.
  Identity source_application = 4;

  // SourceHandler is the identity of the handler that produced the message. It
  // is the zero-value if the message was not produced by a handler.
  Identity source_handler = 5;

  // SourceInstanceID is the aggregate or process instance that produced the
  // message. It is empty if the message was not produced by a handler, or it
  // was produced by an integration handler.
  string source_instance_id = 6;

	// CreatedAt is the time at which the message was created, marshaled in
	// RFC3339Nano format.
	string created_at = 7;

	// ScheduledFor is the time at which a timeout message was scheduled,
	// marshaled in RFC3339Nano format.
	string scheduled_for = 8;

	// MessageMediaType is a MIME media-type describing the content and encoding
	// of the binary message data.
	string message_media_type = 9;

	// MessageData is the marshaled binary data representing the message.
	bytes message_data = 10;
}
