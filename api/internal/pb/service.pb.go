// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/internal/pb/service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExecuteRequest struct {
	ApplicationKey       string    `protobuf:"bytes,1,opt,name=application_key,json=applicationKey,proto3" json:"application_key,omitempty"`
	Command              *Envelope `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ExecuteRequest) Reset()         { *m = ExecuteRequest{} }
func (m *ExecuteRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteRequest) ProtoMessage()    {}
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf1bd0c00876e46, []int{0}
}

func (m *ExecuteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteRequest.Unmarshal(m, b)
}
func (m *ExecuteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteRequest.Marshal(b, m, deterministic)
}
func (m *ExecuteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteRequest.Merge(m, src)
}
func (m *ExecuteRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteRequest.Size(m)
}
func (m *ExecuteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteRequest proto.InternalMessageInfo

func (m *ExecuteRequest) GetApplicationKey() string {
	if m != nil {
		return m.ApplicationKey
	}
	return ""
}

func (m *ExecuteRequest) GetCommand() *Envelope {
	if m != nil {
		return m.Command
	}
	return nil
}

type ExecuteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteResponse) Reset()         { *m = ExecuteResponse{} }
func (m *ExecuteResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteResponse) ProtoMessage()    {}
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf1bd0c00876e46, []int{1}
}

func (m *ExecuteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteResponse.Unmarshal(m, b)
}
func (m *ExecuteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteResponse.Marshal(b, m, deterministic)
}
func (m *ExecuteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteResponse.Merge(m, src)
}
func (m *ExecuteResponse) XXX_Size() int {
	return xxx_messageInfo_ExecuteResponse.Size(m)
}
func (m *ExecuteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteResponse proto.InternalMessageInfo

type ConsumeRequest struct {
	ApplicationKey       string   `protobuf:"bytes,1,opt,name=application_key,json=applicationKey,proto3" json:"application_key,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Events               []string `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumeRequest) Reset()         { *m = ConsumeRequest{} }
func (m *ConsumeRequest) String() string { return proto.CompactTextString(m) }
func (*ConsumeRequest) ProtoMessage()    {}
func (*ConsumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf1bd0c00876e46, []int{2}
}

func (m *ConsumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeRequest.Unmarshal(m, b)
}
func (m *ConsumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeRequest.Marshal(b, m, deterministic)
}
func (m *ConsumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeRequest.Merge(m, src)
}
func (m *ConsumeRequest) XXX_Size() int {
	return xxx_messageInfo_ConsumeRequest.Size(m)
}
func (m *ConsumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeRequest proto.InternalMessageInfo

func (m *ConsumeRequest) GetApplicationKey() string {
	if m != nil {
		return m.ApplicationKey
	}
	return ""
}

func (m *ConsumeRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ConsumeRequest) GetEvents() []string {
	if m != nil {
		return m.Events
	}
	return nil
}

type ConsumeResponse struct {
	Offset               uint64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Event                *Envelope `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ConsumeResponse) Reset()         { *m = ConsumeResponse{} }
func (m *ConsumeResponse) String() string { return proto.CompactTextString(m) }
func (*ConsumeResponse) ProtoMessage()    {}
func (*ConsumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf1bd0c00876e46, []int{3}
}

func (m *ConsumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeResponse.Unmarshal(m, b)
}
func (m *ConsumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeResponse.Marshal(b, m, deterministic)
}
func (m *ConsumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeResponse.Merge(m, src)
}
func (m *ConsumeResponse) XXX_Size() int {
	return xxx_messageInfo_ConsumeResponse.Size(m)
}
func (m *ConsumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeResponse proto.InternalMessageInfo

func (m *ConsumeResponse) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ConsumeResponse) GetEvent() *Envelope {
	if m != nil {
		return m.Event
	}
	return nil
}

func init() {
	proto.RegisterType((*ExecuteRequest)(nil), "dogma.messaging.v1.ExecuteRequest")
	proto.RegisterType((*ExecuteResponse)(nil), "dogma.messaging.v1.ExecuteResponse")
	proto.RegisterType((*ConsumeRequest)(nil), "dogma.messaging.v1.ConsumeRequest")
	proto.RegisterType((*ConsumeResponse)(nil), "dogma.messaging.v1.ConsumeResponse")
}

func init() {
	proto.RegisterFile("api/internal/pb/service.proto", fileDescriptor_cbf1bd0c00876e46)
}

var fileDescriptor_cbf1bd0c00876e46 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x89, 0xd5, 0x96, 0x4e, 0xa1, 0xc5, 0x3d, 0x48, 0xa9, 0x0a, 0x25, 0x1e, 0xac, 0x08,
	0x59, 0x8d, 0xe0, 0x07, 0x50, 0x7a, 0xf2, 0xb6, 0x7a, 0x12, 0x44, 0xb6, 0xdb, 0x69, 0x5c, 0xec,
	0xfe, 0x69, 0x76, 0x13, 0xda, 0x6f, 0x2f, 0x4d, 0x62, 0x69, 0x6b, 0x10, 0x3d, 0xce, 0x30, 0xef,
	0xfd, 0xe6, 0x0d, 0x03, 0xe7, 0xdc, 0x4a, 0x2a, 0xb5, 0xc7, 0x54, 0xf3, 0x39, 0xb5, 0x13, 0xea,
	0x30, 0xcd, 0xa5, 0xc0, 0xc8, 0xa6, 0xc6, 0x1b, 0x42, 0xa6, 0x26, 0x51, 0x3c, 0x52, 0xe8, 0x1c,
	0x4f, 0xa4, 0x4e, 0xa2, 0xfc, 0x76, 0x70, 0xba, 0x2f, 0xf1, 0x2b, 0x8b, 0xae, 0x14, 0x84, 0x0b,
	0xe8, 0x8e, 0x97, 0x28, 0x32, 0x8f, 0x0c, 0x17, 0x19, 0x3a, 0x4f, 0x2e, 0xa1, 0xc7, 0xad, 0x9d,
	0x4b, 0xc1, 0xbd, 0x34, 0xfa, 0xfd, 0x13, 0x57, 0xfd, 0x60, 0x18, 0x8c, 0xda, 0xac, 0xbb, 0xd5,
	0x7e, 0xc2, 0x15, 0xb9, 0x87, 0x96, 0x30, 0x4a, 0x71, 0x3d, 0xed, 0x1f, 0x0c, 0x83, 0x51, 0x27,
	0x3e, 0x8b, 0x7e, 0xd2, 0xa3, 0xb1, 0xce, 0x71, 0x6e, 0x2c, 0xb2, 0xef, 0xe1, 0xf0, 0x18, 0x7a,
	0x1b, 0xa4, 0xb3, 0x46, 0x3b, 0x0c, 0x25, 0x74, 0x1f, 0x8d, 0x76, 0x99, 0xfa, 0xff, 0x16, 0x27,
	0xd0, 0x34, 0xb3, 0x99, 0x43, 0x5f, 0x2c, 0x71, 0xc8, 0xaa, 0x6a, 0xdd, 0xc7, 0x1c, 0xb5, 0x77,
	0xfd, 0xc6, 0xb0, 0x31, 0x6a, 0xb3, 0xaa, 0x0a, 0xdf, 0xa0, 0xb7, 0x41, 0x95, 0xf4, 0x2d, 0x8b,
	0x60, 0xc7, 0x22, 0x86, 0xa3, 0x42, 0xf4, 0xa7, 0x78, 0xe5, 0x68, 0x8c, 0x6b, 0xfb, 0x22, 0x67,
	0x99, 0xd1, 0xa4, 0x84, 0x41, 0xab, 0xca, 0x4b, 0xc2, 0x5a, 0x8b, 0x9d, 0xfb, 0x0f, 0x2e, 0x7e,
	0x9d, 0x29, 0x57, 0x8e, 0x05, 0x74, 0xc6, 0x6b, 0xde, 0xb3, 0x4f, 0x91, 0x2b, 0xf2, 0x02, 0xad,
	0x2a, 0x54, 0x3d, 0x62, 0xf7, 0xb8, 0xf5, 0x88, 0xbd, 0xab, 0xdc, 0x04, 0x0f, 0xd7, 0xaf, 0x57,
	0x89, 0xf4, 0x1f, 0xd9, 0x24, 0x12, 0x46, 0xd1, 0x42, 0xe2, 0xe5, 0x82, 0x4a, 0x3d, 0x93, 0x4b,
	0xba, 0xf7, 0x54, 0x93, 0x66, 0xf1, 0x4f, 0x77, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x37, 0x5b,
	0x5d, 0x29, 0xa1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CommandExecutorClient is the client API for CommandExecutor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommandExecutorClient interface {
	Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (*ExecuteResponse, error)
}

type commandExecutorClient struct {
	cc grpc.ClientConnInterface
}

func NewCommandExecutorClient(cc grpc.ClientConnInterface) CommandExecutorClient {
	return &commandExecutorClient{cc}
}

func (c *commandExecutorClient) Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (*ExecuteResponse, error) {
	out := new(ExecuteResponse)
	err := c.cc.Invoke(ctx, "/dogma.messaging.v1.CommandExecutor/Execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommandExecutorServer is the server API for CommandExecutor service.
type CommandExecutorServer interface {
	Execute(context.Context, *ExecuteRequest) (*ExecuteResponse, error)
}

// UnimplementedCommandExecutorServer can be embedded to have forward compatible implementations.
type UnimplementedCommandExecutorServer struct {
}

func (*UnimplementedCommandExecutorServer) Execute(ctx context.Context, req *ExecuteRequest) (*ExecuteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Execute not implemented")
}

func RegisterCommandExecutorServer(s *grpc.Server, srv CommandExecutorServer) {
	s.RegisterService(&_CommandExecutor_serviceDesc, srv)
}

func _CommandExecutor_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandExecutorServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dogma.messaging.v1.CommandExecutor/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandExecutorServer).Execute(ctx, req.(*ExecuteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CommandExecutor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dogma.messaging.v1.CommandExecutor",
	HandlerType: (*CommandExecutorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _CommandExecutor_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/internal/pb/service.proto",
}

// EventStreamClient is the client API for EventStream service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventStreamClient interface {
	Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (EventStream_ConsumeClient, error)
}

type eventStreamClient struct {
	cc grpc.ClientConnInterface
}

func NewEventStreamClient(cc grpc.ClientConnInterface) EventStreamClient {
	return &eventStreamClient{cc}
}

func (c *eventStreamClient) Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (EventStream_ConsumeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventStream_serviceDesc.Streams[0], "/dogma.messaging.v1.EventStream/Consume", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventStreamConsumeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventStream_ConsumeClient interface {
	Recv() (*ConsumeResponse, error)
	grpc.ClientStream
}

type eventStreamConsumeClient struct {
	grpc.ClientStream
}

func (x *eventStreamConsumeClient) Recv() (*ConsumeResponse, error) {
	m := new(ConsumeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EventStreamServer is the server API for EventStream service.
type EventStreamServer interface {
	Consume(*ConsumeRequest, EventStream_ConsumeServer) error
}

// UnimplementedEventStreamServer can be embedded to have forward compatible implementations.
type UnimplementedEventStreamServer struct {
}

func (*UnimplementedEventStreamServer) Consume(req *ConsumeRequest, srv EventStream_ConsumeServer) error {
	return status.Errorf(codes.Unimplemented, "method Consume not implemented")
}

func RegisterEventStreamServer(s *grpc.Server, srv EventStreamServer) {
	s.RegisterService(&_EventStream_serviceDesc, srv)
}

func _EventStream_Consume_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConsumeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventStreamServer).Consume(m, &eventStreamConsumeServer{stream})
}

type EventStream_ConsumeServer interface {
	Send(*ConsumeResponse) error
	grpc.ServerStream
}

type eventStreamConsumeServer struct {
	grpc.ServerStream
}

func (x *eventStreamConsumeServer) Send(m *ConsumeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _EventStream_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dogma.messaging.v1.EventStream",
	HandlerType: (*EventStreamServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Consume",
			Handler:       _EventStream_Consume_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/internal/pb/service.proto",
}
